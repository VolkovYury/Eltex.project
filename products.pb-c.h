/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: products.proto */

#ifndef PROTOBUF_C_products_2eproto__INCLUDED
#define PROTOBUF_C_products_2eproto__INCLUDED

#include "protobuf-c/protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Product Product;
typedef struct ProductList ProductList;


/* --- enums --- */


/* --- messages --- */

struct  Product
{
  ProtobufCMessage base;
  uint32_t id;
  char *name;
  char *description;
  float price;
  uint32_t quantity;
};
#define PRODUCT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&product__descriptor) \
    , 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0 }


struct  ProductList
{
  ProtobufCMessage base;
  size_t n_data;
  Product **data;
};
#define PRODUCT_LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&product_list__descriptor) \
    , 0,NULL }


/* Product methods */
void   product__init
                     (Product         *message);
size_t product__get_packed_size
                     (const Product   *message);
size_t product__pack
                     (const Product   *message,
                      uint8_t             *out);
size_t product__pack_to_buffer
                     (const Product   *message,
                      ProtobufCBuffer     *buffer);
Product *
       product__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   product__free_unpacked
                     (Product *message,
                      ProtobufCAllocator *allocator);
/* ProductList methods */
void   product_list__init
                     (ProductList         *message);
size_t product_list__get_packed_size
                     (const ProductList   *message);
size_t product_list__pack
                     (const ProductList   *message,
                      uint8_t             *out);
size_t product_list__pack_to_buffer
                     (const ProductList   *message,
                      ProtobufCBuffer     *buffer);
ProductList *
       product_list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   product_list__free_unpacked
                     (ProductList *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Product_Closure)
                 (const Product *message,
                  void *closure_data);
typedef void (*ProductList_Closure)
                 (const ProductList *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor product__descriptor;
extern const ProtobufCMessageDescriptor product_list__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_products_2eproto__INCLUDED */
